/*
 * stm32f44xx_usart.h
 *
 *  Created on: May 11, 2025
 *      Author: katog
 */

#ifndef INC_STM32F44XX_USART_H_
#define INC_STM32F44XX_USART_H_

#include "stm32f4xx.h"
#include "stm32f44xx_rcc.h"
#include <stdlib.h>

typedef enum {

	USART_STATUS_READY,
	USART_STATUS_TX_BUSY,
	USART_STATUS_RX_BUSY,
	USART_BUSY,
	USART_OK,

}USART_STATUS_t;

typedef enum {
	USART_TX_SUCCESS,
	USART_RX_SUCCESS,
	USART_PE_OCCUR

}USART_APPEV_CLLBCK_t;

typedef enum {

	USART_STOPBIT_LEN_1,
	USART_STOPBIT_LEN_2,
	USART_STOPBIT_LEN_half,
	USART_STOPBIT_LEN_threehalf

}USART_STOPBIT_LEN_t;

typedef enum {

	USART_WORD_LEN_8BITS,
	USART_WORD_LEN_9BITS

}USART_WORD_LEN_t;

typedef enum {
	USART_PARITY_EVEN,
	USART_PARITY_ODD,
	USART_PARITY_DISABLE
}USART_PARITY_t;

typedef enum {

	USART_OVER_16,
	USART_OVER_8

}USART_OVER_t;


typedef enum {

	USART_MODE_RX = 1,
	USART_MODE_TX = 2,
	USART_MODE_RXTX = 3

}USART_MODE_t;


typedef enum {

	USART_BAUD_RATE_1200 = 1200,
	USART_BAUD_RATE_2400 = 2400,
	USART_BAUD_RATE_9600 = 9600,
	USART_BAUD_RATE_19200 = 19200,
	USART_BAUD_RATE_38400 = 38400,
	USART_BAUD_RATE_57600 = 57600,
	USART_BAUD_RATE_115200 = 115200,
	USART_BAUD_RATE_230400 = 230400,
	USART_BAUD_RATE_460800 = 460800,
	USART_BAUD_RATE_921600 = 921600,
	USART_BAUD_RATE_2000000 = 2000000,
	USART_BAUD_RATE_3000000 = 3000000

}USART_BAUD_RATE_t;

typedef struct {
	USART_STOPBIT_LEN_t STOPBIT_LEN;
	USART_WORD_LEN_t USART_WORDLEN;
	USART_MODE_t USART_MODE;
	USART_BAUD_RATE_t USART_BAUDRATE;
	USART_OVER_t USART_OVER_VAL;
	USART_PARITY_t USART_PARITY_CTRL;
	USART_TypeDef* pUSARTx;
	uint32_t TX_len;
	uint32_t RX_len;
	uint8_t* TxBuffer;
	uint8_t* RxBuffer;
	USART_STATUS_t USART_RX_STATUS;
	USART_STATUS_t USART_TX_STATUS;

}USART_Handle_t;

void USART_PCLK_CTRL(USART_TypeDef* pUSARTx, uint8_t ENorDI);

void USART_INIT(USART_Handle_t* USART_HANDLE);

void USART_DE_INIT(USART_TypeDef* pUSARTx);

void USART_CTRL(USART_TypeDef* pUSARTx, uint8_t ENorDI);

void USART_SEND_DATA(USART_TypeDef* pUSARTx, uint8_t* TxBuffer, uint32_t len);

void USART_RECEIVE_DATA(USART_TypeDef* pUSARTx, uint8_t* RxBuffer, uint32_t len);

USART_STATUS_t USART_SEND_DATA_IT(USART_Handle_t* USART_HANDLE, uint8_t* TxBuffer, uint32_t len);

USART_STATUS_t USART_RECEIVE_DATA_IT(USART_Handle_t* USART_HANDLE, uint8_t* RxBuffer, uint32_t len);

void USART_IRQ_HANDLE(USART_Handle_t* USART_HANDLE);

void USART_IRQ_CFG(uint8_t IRQ_NUMBER, uint8_t ENorDI);

__attribute__((weak)) void USART_APPEV_CLLBCK(USART_APPEV_CLLBCK_t);

#endif /* INC_STM32F44XX_USART_H_ */
